import Head from "next/head";
import { BsFillMoonStarsFill } from "react-icons/bs";
import { useState } from "react";
import code from "../public/code.png";
import design from "../public/design.png";
import consulting from "../public/consulting.png";
import Image from "next/image";
import flor from "../public/flor.jpg";

export default function Home() {
  const [darkMode, setDarkMode] = useState(false);

  return (
    <div className={darkMode ? "dark" : ""}>
      <Head>
        <title>Creando</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=" bg-white px-10 dark:bg-gray-900 md:px-20 lg:px-40">
        <section className="min-h-screen">
          <nav className="py-10 mb-12 flex justify-between dark:text-white">
            <h1 className="font-burtons text-xl">PORTAFOLIO</h1>
            <ul className="flex items-center">
              <li>
                <BsFillMoonStarsFill
                  onClick={() => setDarkMode(!darkMode)}
                  className=" cursor-pointer text-2xl"
                />
              </li>
            </ul>
          </nav>
          <div className="text-center p-10 py-10">
            <h2 className="text-5xl py-2 text-teal-600 font-medium dark:text-teal-400 md:text-6xl">
              Flor Katterin
            </h2>
            <h3 className="text-2xl py-2 dark:text-white md:text-3xl">
              Duran Areche
            </h3>
            <p className="text-md py-5 leading-8 text-gray-800 dark:text-gray-200 max-w-xl mx-auto md:text-xl">
              Estudiante en la carrera de Ingenieria de Sistemas en la
              Universidad Nacional del Centro del Perú
            </p>
            <div className="mx-auto bg-gradient-to-b from-teal-500 rounded-full w-80 h-80 relative overflow-hidden mt-20 md:h-96 md:w-96">
              <Image src={flor} layout="fill" objectFit="cover" />
            </div>

            <div className="text-5xl flex justify-center ">
              <li>
                <a
                  className="bg-gradient-to-r from-cyan-500 text- to-teal-500 text-white px-1 py-2 border-none rounded-md ml-8"
                  href="#"
                >
                  DESARROLLO DE APLICACIONES WEB
                </a>
              </li>
            </div>
          </div>
        </section>
        <section>
          <div>
            <h3 className="text-3xl py-1 dark:text-white ">CONCEPTO</h3>
            <p className="text-md py-2 leading-8 text-gray-800 dark:text-gray-200">
              Proceso que implica la creación y mantenimiento de aplicaciones
              que se ejecutan en navegadores web
            </p>
          </div>
          <div className="lg:flex gap-10">
            <div className="text-center shadow-lg p-10 rounded-xl my-10  dark:bg-white flex-1">
              <Image src={design} width={100} height={100} />
              <h3 className="text-lg font-medium pt-8 pb-2  ">TEMA 01</h3>
              <p className="py-2">
                FUNDAMENTOS DE LA TECNOLOGÍA WEB HERRAMIENTAS DE DESARROLLO
              </p>
              <h4 className="py-4 text-teal-600">
                Los "Fundamentos de la Tecnología Web" abarcan los principios y
                conceptos esenciales que respaldan el diseño, desarrollo y
                funcionamiento de aplicaciones y sitios web en el entorno
                online. Estos fundamentos comprenden una variedad de áreas, que
                incluyen protocolos de comunicación, lenguajes de programación
                web, arquitecturas de aplicaciones, diseño de interfaces de
                usuario, seguridad web y más.
              </h4>
              <h1></h1>

              <p className="text-gray-800 py-1">
                Herramientas de Desarrollo: IDE: Entornos de Desarrollo
                Integrados como Visual Studio Code, IntelliJ, Eclipse. Editores
                de código: Atom, Sublime Text, Vim, Emacs. Navegadores con
                funciones de desarrollo: Chrome DevTools, Firefox Developer
                Tools. Sistemas de control de versiones: Git, SVN. Frameworks y
                bibliotecas: React, Angular, Vue.js, Django, Ruby on Rails.
              </p>
            </div>
            <div className="text-center shadow-lg p-10 rounded-xl my-10 dark:bg-white flex-1">
              <Image src={code} width={100} height={100} />
              <h3 className="text-lg font-medium pt-8 pb-2 ">TEMA 02</h3>
              <p className="py-2">PÁGINA CON HTML Y XML</p>
              <h4 className="py-4 text-teal-600">
                Crear una página web con HTML y XML implica utilizar dos
                lenguajes de marcado diferentes para estructurar y presentar
                información. Aquí hay un breve concepto de cada uno:
              </h4>
              <p className="text-gray-800 py-1">
                XML (eXtensible Markup Language): XML es un lenguaje de marcado
                que permite definir reglas para la codificación de documentos de
                manera personalizada. A diferencia de HTML, XML no tiene una
                estructura predefinida; en cambio, el desarrollador define sus
                propias etiquetas para representar la información. Se utiliza
                comúnmente para el intercambio de datos entre sistemas
                heterogéneos y para almacenar información estructurada.
              </p>
              <h4 className="py-4 text-teal-600">
                HTML (Hypertext Markup Language): HTML es el lenguaje de marcado
                estándar utilizado para crear páginas web. Proporciona una
                estructura básica para los documentos web, especificando
                elementos como encabezados, párrafos, listas, enlaces, imágenes,
                formularios, etc. Utiliza etiquetas que rodean el contenido para
                definir su significado y presentación en el navegador web. Es
                interpretado por los navegadores web para renderizar la página y
                mostrarla correctamente al usuario.
              </h4>
            </div>
            <div className="text-center shadow-lg p-10 rounded-xl my-10 dark:bg-white flex-1">
              <Image src={consulting} width={100} height={100} />
              <h3 className="text-lg font-medium pt-8 pb-2 ">TEMA 03</h3>
              <p className="py-2">
                DESARROLLAR UNA PÁGINA WEB FRONT-END CON LA LIBRERÍA CSS
                DESARROLLAR UNA PÁGINA WEB FRONT-END CON LA LIBRERÍA CSS
                TAILWIND
              </p>
              <h4 className="py-4 text-teal-600">
                Desarrollar una página web front-end utilizando la librería CSS
                implica utilizar hojas de estilo para diseñar y dar estilo a la
                interfaz de usuario. CSS, que significa "Cascading Style Sheets"
                (Hojas de Estilo en Cascada), es un lenguaje de estilo que
                trabaja junto con HTML para controlar el diseño, el formato y la
                apariencia visual de una página web.
              </h4>
              <p className="text-gray-800 py-1">
                Tailwind CSS es un marco de diseño (framework) de estilo
                utilitario para el desarrollo de interfaces de usuario en el
                lado del cliente (front-end) de aplicaciones web. A diferencia
                de otros marcos de diseño como Bootstrap, que proporcionan
                componentes predefinidos, Tailwind CSS se centra en proporcionar
                clases de utilidad que se aplican directamente en el código HTML
                para definir estilos.
              </p>
            </div>
            <div className="text-center shadow-lg p-10 rounded-xl my-10  dark:bg-white flex-1">
              <Image src={design} width={100} height={100} />
              <h3 className="text-lg font-medium pt-8 pb-2  ">TEMA 04</h3>
              <p className="py-2">
                PÁGINA WEB FRONT-END CON JAVA SCRIPT MANEJAR EL DOM CON
                JAVASCRIPT Y CANVAS
              </p>
              <h4 className="py-4 text-teal-600">
                Cuando se desarrolla una página web front-end con JavaScript y
                se maneja el DOM (Document Object Model), así como se utiliza el
                elemento canvas, se está trabajando con tecnologías
                fundamentales para la interactividad y la manipulación dinámica
                de contenido en el navegador
              </h4>
              <p className="text-gray-800 py-1">
                Canvas en HTML5: El elemento canvas de HTML5 proporciona una
                superficie de dibujo bidimensional que se puede manipular con
                JavaScript. Con el contexto del canvas en JavaScript, puedes
                dibujar gráficos, imágenes, animaciones y más directamente en la
                página web.
              </p>
              <p className="text-green-800 py-1">
                JavaScript y el DOM: JavaScript es un lenguaje de programación
                que se utiliza para agregar interactividad y dinamismo a las
                páginas web. El DOM es una representación jerárquica de la
                estructura de un documento HTML. JavaScript permite interactuar
                con el DOM para cambiar el contenido, la estructura y los
                estilos de la página de manera dinámica.
              </p>
            </div>
            <div className="text-center shadow-lg p-10 rounded-xl my-10 dark:bg-white flex-1">
              <Image src={code} width={100} height={100} />
              <h3 className="text-lg font-medium pt-8 pb-2 ">TEMA 05</h3>
              <p className="py-2">
                DESARROLLAR APLICACIÓN FRONT-END CON FRAMEWORK JS
              </p>
              <h4 className="py-4 text-teal-600">
                Desarrollar una aplicación front-end con un framework JavaScript
                implica utilizar un conjunto estructurado de herramientas,
                bibliotecas y patrones de diseño que facilitan la creación y
                mantenimiento de interfaces de usuario interactivas y dinámicas.
                Un framework JS proporciona una estructura predefinida para
                organizar el código, gestionar el estado de la aplicación,
                manejar eventos y simplificar el desarrollo de funcionalidades
                complejas.
              </h4>
              <p className="text-gray-800 py-1">
                Framework JavaScript: Un framework JavaScript es un conjunto de
                reglas, convenciones y herramientas que facilitan el desarrollo
                de aplicaciones web. Estos marcos están diseñados para
                simplificar tareas comunes y proporcionar una estructura
                organizativa. Los frameworks pueden ser generales o específicos
                para ciertos propósitos (por ejemplo, frameworks para desarrollo
                de SPA - Single Page Applications).
              </p>
            </div>
            <div className="text-center shadow-lg p-10 rounded-xl my-10 dark:bg-white flex-1">
              <Image src={consulting} width={100} height={100} />
              <h3 className="text-lg font-medium pt-8 pb-2 ">TEMA 06</h3>
              <p className="py-2">
                DESARROLLAR APLICACIONES CON EVENTOS, CONDICIONALES Y BUCLES CON
                FRAMEWORK JS
              </p>
              <h4 className="py-4 text-teal-600">
                Desarrollar aplicaciones con eventos, condicionales y bucles
                utilizando un framework JS implica aprovechar las capacidades
                del framework para gestionar interactividad, lógica condicional
                y repeticiones de manera eficiente. A continuación,
                proporcionaré un ejemplo utilizando el framework React, pero los
                conceptos son aplicables de manera general a otros frameworks
                como Angular o Vue.js.
              </h4>
              <p className="text-gray-800 py-1">
                React facilita la gestión de eventos, condicionales y bucles
                para crear aplicaciones interactivas y dinámicas. Otros
                frameworks también proporcionan mecanismos similares para lograr
                estos objetivos.
              </p>
              <div className="text-center shadow-lg p-10 rounded-xl my-10 dark:bg-white flex-1">
                <Image src={consulting} width={100} height={100} />
                <h3 className="text-lg font-medium pt-8 pb-2 ">TEMA 07</h3>
                <p className="py-2">USO DE HOOKS</p>
                <h4 className="py-4 text-teal-600">
                  Los "hooks" en React son funciones especiales que permiten a
                  los desarrolladores usar el estado y otras características de
                  React en componentes basados en funciones. Estos fueron
                  introducidos en React 16.8 para proporcionar funcionalidades
                  de estado y ciclo de vida en componentes de función, antes de
                  eso, estas características solo estaban disponibles en
                  componentes de clase. Los hooks brindan una forma más simple y
                  limpia de manejar el estado y otras funcionalidades en los
                  componentes de React.
                </h4>
                <p className="text-gray-800 py-1">
                  Existen varios hooks integrados en React, pero los más comunes
                  son useState y useEffect.
                </p>
                <p className="text-blue-800 py-1">
                  useState: useState es un hook que permite a los componentes de
                  función tener estado local. Permite declarar una variable de
                  estado y una función para actualizarla.
                </p>
                <p className="text-purple-800 py-1">
                  useEffect: useEffect es un hook que permite realizar efectos
                  secundarios en componentes funcionales. Se utiliza para
                  manejar operaciones después de que el componente se monta,
                  actualiza o desmonta.
                </p>
                <p className="text-orange-800 py-1">
                  useReducer: useReducer es un hook que se utiliza para manejar
                  estados más complejos cuando el estado depende del estado
                  anterior.
                </p>
              </div>
            </div>
          </div>
        </section>
      </main>
    </div>
  );
}
